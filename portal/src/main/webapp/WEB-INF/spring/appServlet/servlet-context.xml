<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<security:global-method-security secured-annotations="enabled" />
	
<context:component-scan base-package="com.testmyinterview.portal" />
<task:annotation-driven />
	<!-- Properties file configuration -->
	 <context:property-placeholder location="classpath:message.properties,classpath:app.properties,classpath:javamail.properties,classpath:payment.properties,classpath:sms.properties" />
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
		
		   <!-- bean class configuration -->
    <beans:bean id="profileBean" class="com.testmyinterview.portal.bean.ProfileBean"/>
    <beans:bean id="adminprofileBean" class="com.testmyinterview.portal.bean.AdminProfileBean"/>
    <beans:bean id="interViewBean" class="com.testmyinterview.portal.bean.InterViewBean"/>
    <beans:bean id="paymentBean" class="com.testmyinterview.portal.bean.PaymentBean"/>
    <beans:bean id="feedbackBean" class="com.testmyinterview.portal.bean.FeedBackBean"/>
    <beans:bean id="scheduleCallBean" class="com.testmyinterview.portal.kookoo.ScheduleCallBean" />
    
	<!-- Dao class configuration -->
	<beans:bean id="errorHandler" class="com.testmyinterview.portal.ErrorHandler" />
	<beans:bean id="adminDao" class="com.testmyinterview.portal.dao.AdminDAO" />
	<beans:bean id="kookooDao" class="com.testmyinterview.portal.dao.KookooDao" />
	<beans:bean id="schedulerDAO" class="com.testmyinterview.portal.dao.SchedulerDAO" />
	<beans:bean id="externalUserDao" class="com.testmyinterview.portal.dao.ExternalUserDao" />
	<beans:bean id="profileDAO" class="com.testmyinterview.portal.dao.ProfileDAO" />
	<beans:bean id="dropDownDAO" class="com.testmyinterview.portal.dao.DropDownDAO" />
	<beans:bean id="internalDAO" class="com.testmyinterview.portal.dao.InternalDAO" />
	<beans:bean id="asyncServiceImpl" class="com.testmyinterview.portal.util.AsyncServiceImpl"/>
	<beans:bean id="tmiUtil" class="com.testmyinterview.portal.util.TmiUtil"/>
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" cache-period="31556926"/>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>
	 <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <beans:property name="host" value="email-smtp.us-west-2.amazonaws.com"/>
      <beans:property name="port" value="587"/>
      <beans:property name="username" value="AKIAJWQN45WAAXMLKQGQ"/>
      <beans:property name="password" value="Al/2/HLL6f/THIyf7zzG7/rxziEq8tg5xmJT7CpHpaHm"/>
       <beans:property name="javaMailProperties">
            <beans:props>
                <beans:prop key="mail.smtp.host">email-smtp.us-west-2.amazonaws.com</beans:prop>
                <beans:prop key="mail.smtp.port">587</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
            </beans:props>
        </beans:property>
	</beans:bean>   
   
    <beans:bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
      <beans:property name="velocityProperties">
         <beans:value>
          resource.loader=class
          class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
         </beans:value>
      </beans:property>
   </beans:bean>
	<interceptors>
		 <beans:bean id="webContentInterceptor"
		class="org.springframework.web.servlet.mvc.WebContentInterceptor">
		<beans:property name="cacheSeconds" value="0" />
		<beans:property name="useExpiresHeader" value="true" />
		<beans:property name="useCacheControlHeader" value="true" />
		<beans:property name="useCacheControlNoStore" value="true" />
		</beans:bean> 
	</interceptors> 

<!-- Sravan : added for job scheduling purpose -->
	<!-- complexJobDetail > kookooCallJobDetail -->
	<!-- given in example : org.springframework.scheduling.quartz.JobDetailFactoryBean -->
	<!-- used in squarespix : org.springframework.scheduling.quartz.JobDetailBean -->
	<beans:bean name="kookooCallJobDetail"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<beans:property name="jobClass" value="com.testmyinterview.portal.kookoo.ScheduledJob" />
		<beans:property name="jobDataAsMap">
			<beans:map>
				<beans:entry key="scheduleCallBean" value-ref="scheduleCallBean" />
			</beans:map>
		</beans:property>
		<beans:property name="durability" value="true" />
	</beans:bean>

	<beans:bean id="cronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<beans:property name="jobDetail" ref="kookooCallJobDetail" />
		<beans:property name="cronExpression" value="0/60 * * * * ?" /><!-- 0/10 * * * * ? -->
	</beans:bean>

	<beans:bean
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<beans:property name="jobDetails">
			<beans:list>
				<beans:ref bean="kookooCallJobDetail" />
			</beans:list>
		</beans:property>
		<beans:property name="triggers">
			<beans:list>
				<beans:ref bean="cronTrigger" />
			</beans:list>
		</beans:property>
	</beans:bean>

</beans:beans>
